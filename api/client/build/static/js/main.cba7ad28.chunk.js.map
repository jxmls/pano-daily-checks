{"version":3,"sources":["components/MultiStepForm.js","App.js","reportWebVitals.js","index.js"],"names":["MultiStepForm","step","setStep","useState","formData","setFormData","date","engineer","solarwinds","client","alert","vsan","handleChange","section","field","value","_objectSpread","[object Object]","React","createElement","Fragment","type","onChange","e","target","style","marginTop","onClick","prev","marginRight","next","async","console","log","res","fetch","method","headers","Content-Type","body","JSON","stringify","data","json","ok","err","error","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"wKAGe,SAASA,IACtB,MAAOC,EAAMC,GAAWC,mBAAS,IAC1BC,EAAUC,GAAeF,mBAAS,CACvCG,KAAM,GACNC,SAAU,GACVC,WAAY,CACVC,OAAQ,GACRC,MAAO,MAETC,KAAM,CACJF,OAAQ,GACRC,MAAO,QAOLE,EAAeA,CAACC,EAASC,EAAOC,KAElCV,EADc,SAAZQ,EACSG,wBAAA,GAAMZ,GAAQ,IAAEa,CAACH,GAAQC,IAEzBC,wBAAA,GACNZ,GAAQ,IACXa,CAACJ,GAAOG,wBAAA,GAAQZ,EAASS,IAAQ,IAAEI,CAACH,GAAQC,QA8BlD,OACEG,IAAAC,cAAA,WACY,IAATlB,GACCiB,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAAA,aAAO,QACPD,IAAAC,cAAA,SACEE,KAAK,OACLN,MAAOX,EAASE,KAChBgB,SAAWC,GAAMX,EAAa,OAAQ,OAAQW,EAAEC,OAAOT,SAEzDG,IAAAC,cAAA,aAAO,YACPD,IAAAC,cAAA,SACEE,KAAK,OACLN,MAAOX,EAASG,SAChBe,SAAWC,GAAMX,EAAa,OAAQ,WAAYW,EAAEC,OAAOT,UAKvD,IAATd,GACCiB,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAAA,aAAO,qBACPD,IAAAC,cAAA,SACEE,KAAK,OACLN,MAAOX,EAASI,WAAWC,OAC3Ba,SAAWC,GAAMX,EAAa,aAAc,SAAUW,EAAEC,OAAOT,UAK3D,IAATd,GACCiB,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAAA,aAAO,eACPD,IAAAC,cAAA,SACEE,KAAK,OACLN,MAAOX,EAASO,KAAKF,OACrBa,SAAWC,GAAMX,EAAa,OAAQ,SAAUW,EAAEC,OAAOT,UAK/DG,IAAAC,cAAA,OAAKM,MAAO,CAAEC,UAAW,SACtBzB,EAAO,GACNiB,IAAAC,cAAA,UAAQQ,QAjFHC,IAAM1B,EAAQD,EAAO,GAiFHwB,MAAO,CAAEI,YAAa,SAAU,QAIxD5B,EAAO,EACNiB,IAAAC,cAAA,UAAQQ,QAvFHG,IAAM5B,EAAQD,EAAO,IAuFH,QAEvBiB,IAAAC,cAAA,UAAQQ,QA3EKI,UACnBC,QAAQC,IAAI,+BACZD,QAAQC,IAAI,WAAY7B,GAExB,IACE,MAAM8B,QAAYC,MAAM,mCAAoC,CAC1DC,OAAQ,OACRC,QAAS,CAAEC,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUrC,KAGjBsC,QAAaR,EAAIS,OACvBX,QAAQC,IAAI,6BAAoBS,GAE5BR,EAAIU,GACNlC,MAAM,iCAENA,MAAM,4BAER,MAAOmC,GACPb,QAAQc,MAAM,gBAAYD,GAC1BnC,MAAM,2BAsD6B,YC/F1BqC,MATf,WACE,OACE7B,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,2CACJD,IAAAC,cAACnB,EAAa,QCKLgD,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAA5B,EAAA,GAAA6B,KAAAD,EAAAE,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH9C,IAAAC,cAACD,IAAM+C,WAAU,KACf/C,IAAAC,cAAC4B,EAAG,QAORC","file":"static/js/main.cba7ad28.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function MultiStepForm() {\r\n  const [step, setStep] = useState(1);\r\n  const [formData, setFormData] = useState({\r\n    date: \"\",\r\n    engineer: \"\",\r\n    solarwinds: {\r\n      client: \"\",\r\n      alert: \"no\"\r\n    },\r\n    vsan: {\r\n      client: \"\",\r\n      alert: \"no\"\r\n    }\r\n  });\r\n\r\n  const next = () => setStep(step + 1);\r\n  const prev = () => setStep(step - 1);\r\n\r\n  const handleChange = (section, field, value) => {\r\n    if (section === \"main\") {\r\n      setFormData({ ...formData, [field]: value });\r\n    } else {\r\n      setFormData({\r\n        ...formData,\r\n        [section]: { ...formData[section], [field]: value }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    console.log(\"üü¢ Submit clicked\");\r\n    console.log(\"Payload:\", formData);\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:3001/api/submit\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(formData)\r\n      });\r\n\r\n      const data = await res.json();\r\n      console.log(\"üîÅ API response:\", data);\r\n\r\n      if (res.ok) {\r\n        alert(\"‚úÖ Submitted successfully\");\r\n      } else {\r\n        alert(\"‚ùå Submission failed\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"‚ùå Error:\", err);\r\n      alert(\"‚ùå Network error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {step === 1 && (\r\n        <>\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            value={formData.date}\r\n            onChange={(e) => handleChange(\"main\", \"date\", e.target.value)}\r\n          />\r\n          <label>Engineer</label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.engineer}\r\n            onChange={(e) => handleChange(\"main\", \"engineer\", e.target.value)}\r\n          />\r\n        </>\r\n      )}\r\n\r\n      {step === 2 && (\r\n        <>\r\n          <label>SolarWinds Client</label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.solarwinds.client}\r\n            onChange={(e) => handleChange(\"solarwinds\", \"client\", e.target.value)}\r\n          />\r\n        </>\r\n      )}\r\n\r\n      {step === 3 && (\r\n        <>\r\n          <label>vSAN Client</label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.vsan.client}\r\n            onChange={(e) => handleChange(\"vsan\", \"client\", e.target.value)}\r\n          />\r\n        </>\r\n      )}\r\n\r\n      <div style={{ marginTop: \"1rem\" }}>\r\n        {step > 1 && (\r\n          <button onClick={prev} style={{ marginRight: \"1rem\" }}>\r\n            Back\r\n          </button>\r\n        )}\r\n        {step < 3 ? (\r\n          <button onClick={next}>Next</button>\r\n        ) : (\r\n          <button onClick={handleSubmit}>Submit</button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport MultiStepForm from './components/MultiStepForm';\n\nfunction App() {\n  return (\n    <div>\n      <h1>Daily Infrastructure Check üöÄ</h1>\n      <MultiStepForm />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}